# we have a list of bad workers from our previous experiments
# We will block them with a new qualification

bad_workers = {"A29EIPTOGXHTGU", "A13U5OK3GJ10KC", "A38YII0ZM1O8P6", "A27GHLNTAKCXA4", "A1QEQOI98976S0", "ACTQC2B2W3KV7", "A3T3YSDLM605QL", "A5AJ3WOPKFLH4", "A2R2OBIC20WUMX", "A2VOPQV9VGAI47", "A2ZKQKFNDVB2MX", "A3MCGKRH5KEZR8", "A2SD2GMKO941OY", "A2VB7O0AZ7AO6A", "A1PC71OMJGZO40", "A366MGK2TOVMID", "A1O47HKBKTNV2L", "A2JB53Y3JFAH4I", "A1PZIN8H1VI6SY", "AUO7GWTC1EAK7", "A1XSLJ01DJL63O", "A2A4DJKCY4T6N5", "A17OEHOV2NNSOH", "A3V5BXNCYK54W3", "AWWLRU1LVFJCT", "AEJFH8HM2UT5R", "A3JKWYVJWRMABL", "A3C4Y7FU8V1JMN", "A1LIKHCSQKZ8DK", "A6ORRFI3XOACA", "A2NKCX5P3OSEZH", "A3LUL9VOVW92EX", "AHGDYNKOKJWFJ", "A3BLNHSA2SCT8X", "APF1EAZT104LQ", "A3P57IUDHUKNCE", "A352QLA6AIP5J2", "A12HIW79ZJ7B50", "A1UI4LQGH05BII", "A61W2HPXPHZ33", "A2EPZCQ3BHZ9ZB", "A1247PYAVEPWTX", "ADJNEKYVF2F8Q", "A10UOV89EVLDAM", "A2868HFLIU4V0C", "A3GGPBF74ED245", "A1ANTADCIBMGWF", "AA9P9RSK7VMHJ", "AAFY4NE96UANF", "A40TSBQGH8H8G", "A1KFNSMZBQRK1H", "A1HIQZEC2ER7GS", "A1HCGHEB6VMA2J", "AUU3FYNZXKENO", "AG9LWKO86TNHG", "A2HA7TYX74724A", "AKHL3259JP5GK", "A2FY2ZK1YOR684", "A2IYD10LBEH6AT", "A8AMM40Q8CVUF", "A3HZFB2JLF3JMY", "A13KN8YNNYI9T1", "A2174AZV1ZHK4Y", "A29K8AD7KOWZHE", "AEH26NN5D5NRC", "A2X22THSGNRPI", "A3NL2ERKV2RG1A", "A2AFA53ZHDQ2SH", "AJU42382Q0CG1", "A3FS8TJO31K664", "A30350B4IZ5EG6", "A2IRBZJJEB9P5E", "A252PMEYW7EUQC", "A3DGP6CY1Q86PX", "A2I2M82BJGHZ04", "A2LU3PBECQTG81", "A1Y59WOJIP7RGW", "A3CR9XJAL7U5JW", "A10X580SE8D49Y", "A3IXUGNFWQ492Y", "A17MG650X3U09C", "A1NB99B7OR7HVL", "A2S1Z9FGS2YCV5", "A38HNK5JAFZ2F7", "A1BC99Y9MP5AWT", "A27LBBOAXS7SGT", "AM3JG6AMHRGP8", "A2VNR6984SDFGQ", "A3JBCHBOYPOFR8", "A146MSML39KY98", "A3FCS7MVQ7VP0I", "A2S34ZLZO6GOJ7", "AIVSV91CBYI12", "A3LYTS9S2XD704", "A1I191A0UQLKM5", "A9YSQNV8OLPDG", "ADQXQZG27BTQH", "A1WCVLMJEZUU0U", "A3MUG02LJ4BM9F", "AOPST5A724VWS", "A321ZSENNI7CUT", "A3S9QM414LJJ2I", "A2H9FMJIC40XBI", "A17PVTWLMCE41B", "A2RCDFF4IA19YZ", "A2KCXE8U82PT7B", "A2UUPNB8D0CLBW", "A1U5HJN8JXXLI7", "A2V3QSGHSZJ05Y", "AXDS1KOPHE1W", "A3UV55HC87DO9C", "AGYMUF83F5W59", "A2LSN85E968NQO", "ABQM9FJ6AXPCO", "A1YVDI67M8KZHI", "A4I8ABYM0E2AE", "A1TR5V28IAIIBZ", "A13WYZ8AXD6ODX", "A54NJKWJ53T5E", "AWIS0MFMQ6PBS", "A3HXM7BGH18FOW", "A15DXD3Z1AHK6C", "A1F4TB5AD4LKLO", "A37U8NGF0FTPG4", "A1Y4C2TYJFRF1G", "A1ZG1R4SYSMUD5", "ADARRT8JAXUAD", "A3RECFJSQ96LH5", "A2ETARP95NIALM", "A29DDBKUL10777", "A2ABC3WR2UCT06", "A2NGTHTYH32XE8", "ARJL03K17Y369", "A15340BRCER2UO", "AFTX47T07GSFQ", "ABR849Y69MDQI", "A3A63A0CL5CEX", "A1UJ2M1AKWMNLC", "A3PC6EQOFAGPHS", "A3DYCWVN5J8D2A", "ALDQNUGXTCKVC", "A219VCQZADQ45W", "A256JTRKOE4URO", "A1IX6Q3KQM8HYH", "A1QKXRWCN1OOX", "A28USYJ3K59JS2", "A1HUHOJYQNDH6F", "A1JNNP9R3IF17Z", "A2J9BJY642KQ9O", "A1GADFKLZR915C", "A8PZRRBXZ84WG", "A1IKYSZAAFEN1C", "A16QLMX55AU60J", "A10CYIL141IBZT", "A3W51A8NORC2PQ", "A4YK8IPFO3E1Z", "A36OZZFWV48FI6", "A3PWABNVKQ5H4O", "A3NOWTJ3JRJMPJ", "A791T664W1GCS", "AL6Y6NA9RGSC6", "A3G1X3IP2VM4IK", "A3BHWGNQUVMEKU", "A3NX2N6Z3DZE8M", "A1DA6S3J7EM9CE", "A3E8JRCES2Q2HZ", "A2J3WQ6GQDQ1LP", "AIP7X7SVZO8UD", "A2JN648XOWMBPD", "A1OAVV0DX6HQG2", "A2IQF2VCG2FOEI", "A25IOSN0SDB5CJ", "AW1X2VHFOIIAO", "A3TGJDHWVCNWA3", "AWCS6EZAUYR3", "ABNAAU1E5TT75", "ACMF56L4JWRTO", "AEHYUPNQVJL9O", "A1F669OTXWIJW0", "A1KLTPBLZUYKFO", "A1B620YYEQAYKM", "A2T974CBTMP1AT", "A1SDEMSTAT87JB", "AFG445UR3ERNT", "A1PW5ILK2XFKDU", "A3CAMCZTWAI4QR", "A2CT8H8RK9MDRZ", "A1UPCO61WGCFU9", "A3OZCIH1AGMZII", "A2I36M5UA0EOYG", "A224LU2BW18Z0Y", "A2157YFCONGUYV", "A35KK6F378H3UV", "A24TZJJTNK7XRS", "A1TZ7C4KNV5W1N", "APOMM9AR8Y2R2"}
bad_workers = {"A2QJP5BZ7B523H", "A2G7F16RAOFTXG"}
bad_workers = {"A423QQ5WN43B9", "ARG392N6HWZCJ", "A3OVS29S2TYBQR"}
bad_workers = {"A2UO3QJZNC2VOE", "A1FWP2MESHFZQG", "A2JJF5OFND2KL5", "A1TYMXIYUUUL6F", "A2GZNOA5CIVKUB", "A3ES4ZR2BMKEET", "A1J6Z70T78B35V"}
# A5BMKZRGHNSRT this user had unusal behavior. This worker has high similarity with other users yet very short HIT times. This worker has many HITs with less than 45 seconds
bad_workers = {"AITP2LUW8GPB", "A3AGF9EJPNNZH5", "A11BLQKVW1951L", "A33QSLM9P8111P", "A5BMKZRGHNSRT"}
# Possilbe bad worker A3VQP1UC7BA3YU
bad_workers = {"AIK048AKW8LJ6"}
bad_workers = {"A2ZX7580NVWA6I"}
bad_workers = {"A1K5ADLDP6OPMR"}


# Latest bad worker to be removed after resolving the shortest_response choice person


bad_workers = {"A1VBZWAHLWQMXM", "A7SXWHGK8B40R", "AZVHR847NQRU", "AQFBQ7PQ8FR2Y", "AJTLLYV8O5FQU", "A100Y4C73CCD92", "A10DGGOQ9N186P"}
bad_workers = {"A293TIAVWJX7KC", "A1BCQU4CUONYIX"}

bad_workers = {"A162CO8K267FU8", "A89HSG51VTPP0", "A2P3KHF8NIJS68"}
bad_workers = {"A1X0IC6CG46MYX", "A13JQTLPWXZD6L", "A1WF19BIZNJDZR", "A2TM31UYSYYGNU", "A2J6S7QR4CGXTW", "AU01P6YB9J5JX", "A1RNQ5X21BF816", "A3GTPW3MYSLMR7", "A1CTJ8UT7SF317", "ACBJKPJ1Q2FKJ", "A28X70CWD4KM95", "A3T6Q7YJQXYZ2Z", "AW02W1A865GT4", "A2RGHUEITGT0MG", "A1BDI74U9ZWBS2", "A3MKKWVXXPR71", "ADIDQI8U9SVHW", "A1B76WYZ47BQJ", "A2A7O6KYJ9GS8A", "A29R0FQ7OLGU74", "ACF8CYOJ1P4GC", "A1HNR6OIRFCEHS", "AZOV5QBQK3B8L", "A2PJBSDDN22XIX", "A2XNE039XZT66F", "AUA2P8CCPR5GS", "A1D0DHEF8HCABM", "A1K5ADLDP6OPMR"}

# Final annotation Bad workers
# Batch 1
bad_workers = {"A2AUMGW4F3G1OF", "A2K53OHEY92410", "A2OARJ7KZR3HRZ", "A3N92NVSK6SL94"}
# Batch 2
bad_workers = {"A370UEGCN3MI1B", "A195ALXEOWXS4A", "A1GNZAFDJH91FZ", "A2FIMENJ9UMN7M", "A3C2DKCZLI304P"}
# Batch 3
bad_workers = {"A1N1F009NU2GF7", "A228XFM30528FX"}
# Batch 4
bad_workers = {"AMQGOTPBRWYSF", "A2XBKYIGJAJ7HT", "A3I72FPW52ABJ5"}
import csv
import os

worker_qualifications_file = "User_989755_workers.csv"
updated_worker_qualifications_file = "User_989755_workers_marked_bad_workers.csv"

ashu_good_workers_column_name = "UPDATE-ashu_good_workers"
worker_column_name = "Worker ID"

with open(worker_qualifications_file, "r") as in_csvfile, open(updated_worker_qualifications_file, "w") as out_csvfile:
	reader = csv.reader(in_csvfile, delimiter=',')
	writer = csv.writer(out_csvfile, delimiter=',')
	header_row = next(reader)
	writer.writerow(header_row)
	ashu_good_workers_column_index = header_row.index(ashu_good_workers_column_name)
	worker_id_column_index = header_row.index(worker_column_name)
	for row in reader:
		worker_id = row[worker_id_column_index]
		if worker_id in bad_workers:
			# if its a bad worker we will set its qualification as 1 and essentially remove permission to work on our HIT
			row[ashu_good_workers_column_index] = 1
		writer.writerow(row)


